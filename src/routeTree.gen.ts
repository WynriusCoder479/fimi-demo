/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CampaignCampaignIdImport } from './routes/campaign.$campaignId'

// Create Virtual Routes

const SubscribeLazyImport = createFileRoute('/subscribe')()
const ReportLazyImport = createFileRoute('/report')()
const GuideLazyImport = createFileRoute('/guide')()
const CareerLazyImport = createFileRoute('/career')()

// Create/Update Routes

const SubscribeLazyRoute = SubscribeLazyImport.update({
  path: '/subscribe',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/subscribe.lazy').then((d) => d.Route))

const ReportLazyRoute = ReportLazyImport.update({
  path: '/report',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/report.lazy').then((d) => d.Route))

const GuideLazyRoute = GuideLazyImport.update({
  path: '/guide',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/guide.lazy').then((d) => d.Route))

const CareerLazyRoute = CareerLazyImport.update({
  path: '/career',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/career.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CampaignCampaignIdRoute = CampaignCampaignIdImport.update({
  path: '/campaign/$campaignId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/career': {
      id: '/career'
      path: '/career'
      fullPath: '/career'
      preLoaderRoute: typeof CareerLazyImport
      parentRoute: typeof rootRoute
    }
    '/guide': {
      id: '/guide'
      path: '/guide'
      fullPath: '/guide'
      preLoaderRoute: typeof GuideLazyImport
      parentRoute: typeof rootRoute
    }
    '/report': {
      id: '/report'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof ReportLazyImport
      parentRoute: typeof rootRoute
    }
    '/subscribe': {
      id: '/subscribe'
      path: '/subscribe'
      fullPath: '/subscribe'
      preLoaderRoute: typeof SubscribeLazyImport
      parentRoute: typeof rootRoute
    }
    '/campaign/$campaignId': {
      id: '/campaign/$campaignId'
      path: '/campaign/$campaignId'
      fullPath: '/campaign/$campaignId'
      preLoaderRoute: typeof CampaignCampaignIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  CareerLazyRoute,
  GuideLazyRoute,
  ReportLazyRoute,
  SubscribeLazyRoute,
  CampaignCampaignIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/career",
        "/guide",
        "/report",
        "/subscribe",
        "/campaign/$campaignId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/career": {
      "filePath": "career.lazy.tsx"
    },
    "/guide": {
      "filePath": "guide.lazy.tsx"
    },
    "/report": {
      "filePath": "report.lazy.tsx"
    },
    "/subscribe": {
      "filePath": "subscribe.lazy.tsx"
    },
    "/campaign/$campaignId": {
      "filePath": "campaign.$campaignId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
